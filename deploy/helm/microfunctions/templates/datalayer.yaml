#   Copyright 2020 The KNIX Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

---
apiVersion: v1
kind: Service
metadata:
  name: "datalayer"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "microfunctions-datalayer"
    release: "{{ .Release.Name }}"
    heritage: {{ .Release.Service | quote }}
spec:
  ports:
  - port: {{ .Values.datalayer.port }}
    name: datalayer
  clusterIP: None
  selector:
    app: "microfunctions-datalayer"
    release: "{{ .Release.Name }}"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "dl-{{ .Release.Name }}"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "microfunctions-datalayer"
    release: "{{ .Release.Name }}"
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: datalayer
  replicas: {{ default 3 .Values.datalayer.replicas }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: "microfunctions-datalayer"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "microfunctions-datalayer"
        release: "{{ .Release.Name }}"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app: "microfunctions-datalayer"
      #tolerations:
      #- key: node-role.kubernetes.io/master
      #  effect: NoSchedule
      containers:
      - name: datalayer
        image: "{{ .Values.imageRepo }}{{ .Values.datalayer.imagePath }}:{{ .Values.datalayer.imageTag }}"
        imagePullPolicy: "{{ .Values.datalayer.imagePullPolicy }}"
        env:
        - name: RIAK_CONNECT
          value: {{ include "rkConnect.url" . | quote }}
        - name: DATALAYER_BIND
          value: "0.0.0.0:{{ .Values.datalayer.port }}"
        - name: ALL_DATALAYER_BIND
          value: {{ include "dlConnect" . | quote }}
        ports:
        - containerPort: {{ .Values.datalayer.port }}
          name: datalayer
        readinessProbe:
          tcpSocket:
            port: {{ .Values.datalayer.port }}
          initialDelaySeconds: {{ .Values.datalayer.initialDelaySeconds }}
          timeoutSeconds: 30
          failureThreshold: 10
        resources:
{{ toYaml .Values.datalayer.resources | indent 10}}
